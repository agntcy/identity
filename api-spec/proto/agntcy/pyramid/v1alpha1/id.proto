// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto3";

package agntcy.pyramid.v1alpha1;

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/pyramid/internal/pkg/generated/agntcy/pyramid/v1alpha1;pyramid_sdk_go";

// The Agent definition following OASF schema
// Specs: https://schema.oasf.agntcy.org/schema/objects/agent
message AgentClaims {
  // The OASF in json format
  optional string value = 1;
}

// AgentPassport represents an identity passport for an agent.
message AgentPassport {
  // EnvelopeType specifies the type of the envelope used to store the passport.
  optional AgentPassportEnvelopeType envelope_type = 1;

  // Value is the value of the passport.
  optional string value = 2;
}


// JWK represents a JSON Web Key as per RFC7517 (https://tools.ietf.org/html/rfc7517)
// Note that this is a subset of the spec. There are a handful of properties that the
// spec allows for that are not represented here at the moment. This is because we
// only need a subset of the spec for our purposes.
message JWK {
  // ALG represents the algorithm intended for use with the key.
  optional string alg = 1;

  // KTY represents the key type parameter.
  // It specifies the family of cryptographic algorithms used with the key,
  // such as "RSA" or "EC" for elliptic curve keys.
  optional string kty = 2;

  // CRV represents the curve parameter for elliptic curve keys.
  // It specifies the cryptographic curve used with the key, such as "P-256" or "P-384".
  optional string crv = 3;

  // D represents the private key parameter.
  // This field is used to store the private key material for asymmetric keys.
  optional string d = 4;

  // X represents the x-coordinate for elliptic curve keys.
  // This field is part of the public key material for elliptic curve cryptography (ECC).
  optional string x = 5;

  // Y represents the y-coordinate for elliptic curve keys.
  // This field is part of the public key material for elliptic curve cryptography (ECC)
  optional string y = 6;
}

// The Envelope Type of the Agent Passport.
// Multiple envelope types can be supported: JOSE, COSE etc.
enum AgentPassportEnvelopeType {
  // Unspecified Envelope Type.
  AGENT_PASSPORT_ENVELOPE_TYPE_UNSPECIFIED = 0;
  // JOSE Envelope Type.
  AGENT_PASSPORT_ENVELOPE_TYPE_JOSE = 1;
}

