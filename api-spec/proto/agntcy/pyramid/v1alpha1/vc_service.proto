syntax = "proto3";

package agntcy.pyramid.v1alpha1;

import "agntcy/pyramid/v1alpha1/vc.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/pyramid/internal/pkg/generated/agntcy/pyramid/v1alpha1;pyramid_sdk_go";

// VC is the service that provides VC operations.
service VcService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "VcService";
  };

  // Issue
  rpc Issue(IssueRequest) returns (EnvelopedVerifiableCredential) {
    option (google.api.http) = {
            post: "/v1alpha1/vc/issue"
            body: "*"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "IssueVerifiableCredential";
      summary: "Issue a Verifiable Credential";
    };
  }

  // Publish
  rpc Publish(EnvelopedVerifiableCredential) returns (google.protobuf.Empty) {
    option (google.api.http) = {
            post: "/v1alpha1/vc/publish"
            body: "*"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "PublishVerifiableCredential";
      summary: "Publish a Verifiable Credential";
    };
  }

  // Verify
  rpc Verify(EnvelopedVerifiableCredential) returns (google.protobuf.Empty) {
    option (google.api.http) = {
            post: "/v1alpha1/credentials/publish"
            body: "*"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "VerifyVerifiableCredential";
      summary: "Verify a Verifiable Credential";
    };
  }
}

// IssueRequest is a request to issue a VC
message IssueRequest {
  // ID is the method-specific identifier in the DID URI.
  // Spec: https://www.w3.org/TR/did-core/#method-specific-id
  // Agntcy DID has the following format: did:agntcy:{id}
  string id = 1;

  // Content of the VC
  CredentialContent content = 2;

  // Envelope type
  VerifiableCredentialEnvelopeType envelope_type = 3;
}

