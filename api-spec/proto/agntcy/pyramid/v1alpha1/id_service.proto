syntax = "proto3";

package agntcy.pyramid.v1alpha1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/pyramid/internal/pkg/generated/agntcy/pyramid/v1alpha1;pyramid_sdk_go";

// IdService is the service that provides ID operations.
service IdService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "IdService";
  };

  // Generate an Id
  rpc Generate(GenerateRequest) returns (AgentPassport) {
    option (google.api.http) = {
            post: "/v1alpha1/id/generate"
            body: "claims"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GenerateId";
      summary: "Generate Id for an Agent";
    };
  }

  // Resolve an Id
  rpc Resolve(ResolveRequest) returns (AgentPassport) {
    option (google.api.http) = {
            post: "/v1alpha1/id/resolve"
            body: "claims"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "ResolveId";
      summary: "Resolve Id";
    };
  }
}

// Generate an Id based on the agent
message GenerateRequest {
  // The full OASF representation of an agent including the digest
  AgentClaims claims = 1;
}

message ResolveRequest {
  // The full OASF representation of an agent including the digest
  AgentClaims claims = 1;
}


