syntax = "proto3";

package agntcy.pyramid.v1alpha1;

import "agntcy/pyramid/v1alpha1/issuer.proto";
import "agntcy/pyramid/v1alpha1/did.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/pyramid/internal/pkg/generated/agntcy/pyramid/v1alpha1;pyramid_sdk_go";

// IssuerService is the service that provides ISSUER operations.
service IssuerService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "IssuerService";
  };

  // Register a Issuer
  rpc RegisterIssuer(RegisterIssuerRequest) returns (RegisterIssuerResponse) {
    option (google.api.http) = {
            post: "/v1alpha1/issuers/register"
            body: "issuer"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "RegisterIssuer";
      summary: "Register a issuer";
    };
  }

  // Generate a keypair in JWK format
  rpc KeyGen(google.protobuf.Empty) returns (JWK) {
    option (google.api.http) = {
            get: "/v1alpha1/issuers/keygen"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "KeyGen";
      summary: "Generate a keypair in JWK format";
    };
  }

  // Resolve a web DID document to the well-known DID document
  rpc WellKnown(WellKnownRequest) returns (JWK) {
    option (google.api.http) = {
            get: "/v1alpha1/{issuer_common_name}/.well-known/did.json"
        };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "WellKnown";
      summary: "Return the well-known DID document from a web DID";
    };
  }
}

message RegisterIssuerRequest {
  // The Issuer to register.
  Issuer issuer = 1;
}

message RegisterIssuerResponse {
  // The proof of the registration.
  // This could be added as a TXT record in the DNS
  string proof = 1;
}

message WellKnownRequest {
  // The common name of the issuer
  string issuer_common_name = 1;
}
