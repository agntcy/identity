syntax = "proto3";

package agntcy.identity.node.v1alpha1;

import "agntcy/identity/core/v1alpha1/vc.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/identity/internal/pkg/generated/agntcy/identity/node/v1alpha1;identity_node_sdk_go";

// VC is the service that provides VC operations.
service VcService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "VcService";
  };

  // Publish
  rpc Publish(PublishRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
            post: "/v1alpha1/vc/publish"
            body: "*"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "PublishVerifiableCredential";
      summary: "Publish a Verifiable Credential";
    };
  }

  // Verify
  rpc Verify(VerifyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
            post: "/v1alpha1/vc/verify"
            body: "*"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "VerifyVerifiableCredential";
      summary: "Verify a Verifiable Credential";
    };
  }

  // APWellKnown endpoint
  rpc APWellKnown(APWellKnownRequest) returns (APWellKnownResponse) {
    option (google.api.http) = {
            get: "/v1alpha1/vc/{id}/.well-known/ap.json"
        };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "WellKnown";
      summary: "Returns the well-known verifiable presentation for an agent passport";
    };
  }

  // Search
  rpc Search(SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
            post: "/v1alpha1/vc/search"
            body: "*"
        };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "SearchVerifiableCredentials";
      summary: "Search Verifiable Credentials";
    };
  }
}

// PublishRequest is a request to publish a Verifiable Credential
message PublishRequest {
  // The Verifiable Credential to publish
  agntcy.identity.core.v1alpha1.EnvelopedCredential vc = 1;
}

// VerifyRequest is a request to verify a Verifiable Credential
message VerifyRequest {
  // The Verifiable Credential to verify
  agntcy.identity.core.v1alpha1.EnvelopedCredential vc = 1;
}

// SearchRequest is a request to seach for VCs
message SearchRequest {
  // ID is the identifier.
  string id = 1;

  // Schema is the schema of the credential contained in the VC
  agntcy.identity.core.v1alpha1.CredentialSchema schema = 2;

  // The credential content representation in JSON-LD format
  string content = 3;
}

// SearchResponse returns the VCs that match the search criteria
message SearchResponse {
  // The list of VCs that match the search criteria
  repeated agntcy.identity.core.v1alpha1.EnvelopedCredential vcs = 1;
}

// APWellKnownResponse returns the well-known document for a passport
message APWellKnownRequest {
  // The identifier.
  string id = 1;
}

// APWellKnownResponse returns the well-known document for an Agent Passport
message APWellKnownResponse {
  // The well-known document for an Agent Passport
  agntcy.identity.core.v1alpha1.AgentPassport ap = 1;
}
