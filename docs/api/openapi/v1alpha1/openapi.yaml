# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: PyramID
    description: PyramID
    contact:
        name: Agntcy Team
        url: https://github.com/agntcy/pyramid
        email: pyramid@agntcy.org
    version: v1alpha1
servers:
    - url: http://0.0.0.0:4000
      description: Local environment
paths:
    /v1alpha1/dids:
        get:
            tags:
                - DidService
            description: List Dids.
            operationId: DidService_ListDids
            parameters:
                - name: page
                  in: query
                  description: The current page of the pagination
                  schema:
                    type: integer
                    format: int32
                - name: size
                  in: query
                  description: The page size of the pagination
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: The search query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDidsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - DidService
            description: Generate a Did
            operationId: DidService_GenerateDid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateDidRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DidDocument'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/dids/publish:
        post:
            tags:
                - DidService
            description: Publish a Did
            operationId: DidService_PublishDid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DidDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DidDocument'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/dids/{id}:
        get:
            tags:
                - DidService
            description: Resolve a Did
            operationId: DidService_ResolveDid
            parameters:
                - name: id
                  in: path
                  description: |-
                    The DID URI for a particular DID subject,
                     expressed using the id property in the DID document.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DidDocument'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/issuers/keygen:
        get:
            tags:
                - IssuerService
            description: Generate a keypair in JWK format
            operationId: IssuerService_KeyGen
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWK'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/issuers/register:
        post:
            tags:
                - IssuerService
            description: Register a Issuer
            operationId: IssuerService_RegisterIssuer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Issuer'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterIssuerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/{issuerCommonName}/.well-known/did.json:
        get:
            tags:
                - IssuerService
            description: Resolve a web DID document to the well-known DID document
            operationId: IssuerService_WellKnown
            parameters:
                - name: issuerCommonName
                  in: path
                  description: The common name of the issuer
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWK'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        DidDocument:
            type: object
            properties:
                id:
                    type: string
                    description: |-
                        The DID {ID}
                         A did could be represented as `did:agntcy:{ID}`
                         The metadata below is related as claims to the {ID}
                node:
                    type: string
                    description: The node that was used to publish the document
                controller:
                    type: array
                    items:
                        type: string
                    description: |-
                        Controller defines an entity that is authorized to make changes to a DID document.
                         The process of authorizing a DID controller is defined by the DID method.
                         It can be a string or a list of strings.
                verificationMethod:
                    type: array
                    items:
                        $ref: '#/components/schemas/VerificationMethod'
                    description: |-
                        VerificationMethod is a list of cryptographic public keys, which can be used to authenticate or authorize
                         interactions with the DID subject or associated parties.
                service:
                    type: array
                    items:
                        $ref: '#/components/schemas/Service'
                    description: |-
                        Service expresses ways of communicating with the DID subject or associated entities.
                         A service can be any type of service the DID subject wants to advertise.
                         spec reference: https://www.w3.org/TR/did-core/#verification-methods
                assertionMethod:
                    type: array
                    items:
                        type: string
                    description: |-
                        AssertionMethod is used to specify how the DID subject is expected to express claims,
                         such as for the purposes of issuing a Verifiable Credential.
            description: |-
                A PyramID Decentralized Identifier Document represents a set of data describing the DID subject including mechanisms such as:
                   - cryptographic public keys - used to authenticate itself and prove
                     association with the DID
                   - services - means of communicating or interacting with the DID subject or
                     associated entities via one or more service endpoints.
                     Examples include discovery services, agent services,
                     social networking services, file storage services,
                     and verifiable credential repository services.

                 A DID Document can be retrieved by resolving a DID URI.
        DidSubject:
            type: object
            properties:
                id:
                    type: string
                    description: A local unique id of the subject.
                type:
                    enum:
                        - DID_SUBJECT_TYPE_UNSPECIFIED
                        - DID_SUBJECT_TYPE_AGENT
                        - DID_SUBJECT_TYPE_AGENT_LOCATOR
                    type: string
                    description: |-
                        Type specifies the type of the subject, as defined by the DidSubjectType enum.
                         This indicates the role or nature of the subject in the decentralized identity system,
                         such as whether it is an agent or an agent locator.
                    format: enum
            description: DidSubject represents a subject within a decentralized identity framework.
        GenerateDidRequest:
            type: object
            properties:
                issuer:
                    allOf:
                        - $ref: '#/components/schemas/Issuer'
                    description: Issuer of the DID
                subject:
                    allOf:
                        - $ref: '#/components/schemas/DidSubject'
                    description: The DID subject
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Issuer:
            type: object
            properties:
                commonName:
                    type: string
                    description: |-
                        The common name of the issuer
                         Example: isuser.com
                publicKey:
                    allOf:
                        - $ref: '#/components/schemas/JWK'
                    description: |-
                        The keys of the issuer of the DID in JWK format
                         The public key is used to verify the signature of the DID
                privateKey:
                    allOf:
                        - $ref: '#/components/schemas/JWK'
                    description: The private key of the issuer of the DID in JWK format
            description: A PyramID Issuer
        JWK:
            type: object
            properties:
                alg:
                    type: string
                    description: ALG represents the algorithm intended for use with the key.
                kty:
                    type: string
                    description: |-
                        KTY represents the key type parameter.
                         It specifies the family of cryptographic algorithms used with the key,
                         such as "RSA" or "EC" for elliptic curve keys.
                crv:
                    type: string
                    description: |-
                        CRV represents the curve parameter for elliptic curve keys.
                         It specifies the cryptographic curve used with the key, such as "P-256" or "P-384".
                d:
                    type: string
                    description: |-
                        D represents the private key parameter.
                         This field is used to store the private key material for asymmetric keys.
                x:
                    type: string
                    description: |-
                        X represents the x-coordinate for elliptic curve keys.
                         This field is part of the public key material for elliptic curve cryptography (ECC).
                y:
                    type: string
                    description: |-
                        Y represents the y-coordinate for elliptic curve keys.
                         This field is part of the public key material for elliptic curve cryptography (ECC)
            description: |-
                JWK represents a JSON Web Key as per RFC7517 (https://tools.ietf.org/html/rfc7517)
                 Note that this is a subset of the spec. There are a handful of properties that the
                 spec allows for that are not represented here at the moment. This is because we
                 only need a subset of the spec for our purposes.
        ListDidsResponse:
            type: object
            properties:
                documents:
                    type: array
                    items:
                        $ref: '#/components/schemas/DidDocument'
                    description: A list of Did documents.
                pagination:
                    allOf:
                        - $ref: '#/components/schemas/PagedResponse'
                    description: Pagination response.
        PagedResponse:
            type: object
            properties:
                nextPage:
                    type: integer
                    description: Next page
                    format: int32
                hasNextPage:
                    type: boolean
                    description: Has next page
                total:
                    type: string
                    description: The total size of items
                size:
                    type: integer
                    description: The size of the current page
                    format: int32
            description: Pagination response
        RegisterIssuerResponse:
            type: object
            properties:
                proof:
                    type: string
                    description: |-
                        The proof of the registration.
                         This could be added as a TXT record in the DNS
        Service:
            type: object
            properties:
                id:
                    type: string
                    description: |-
                        Id is the value of the id property and MUST be a URI conforming to RFC3986.
                         A conforming producer MUST NOT produce multiple service entries with
                         the same id. A conforming consumer MUST produce an error if it detects
                         multiple service entries with the same id.
                type:
                    type: string
                    description: |-
                        Type is an example of registered types which can be found
                         here: https://www.w3.org/TR/did-spec-registries/#service-types
                serviceEndpoint:
                    type: array
                    items:
                        type: string
                    description: |-
                        ServiceEndpoint is a network address, such as an HTTP URL, at which services
                         operate on behalf of a DID subject.
            description: |-
                Service is used in DID documents to express ways of communicating with
                 the DID subject or associated entities.
                 A service can be any type of service the DID subject wants to advertise.

                 Specification Reference: https://www.w3.org/TR/did-core/#services
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        VerificationMethod:
            type: object
            properties:
                id:
                    type: string
                    description: A unique id of the verification method.
                type:
                    type: string
                    description: |-
                        references exactly one verification method type. In order to maximize global
                         interoperability, the verification method type SHOULD be registered in the
                         DID Specification Registries: https://www.w3.org/TR/did-spec-registries/
                controller:
                    type: string
                    description: 'a value that conforms to the rules in DID Syntax: https://www.w3.org/TR/did-core/#did-syntax'
                publicKeyJwk:
                    allOf:
                        - $ref: '#/components/schemas/JWK'
                    description: 'specification reference: https://www.w3.org/TR/did-core/#dfn-publickeyjwk'
            description: |-
                VerificationMethod expresses verification methods, such as cryptographic
                 public keys, which can be used to authenticate or authorize interactions
                 with the DID subject or associated parties. For example,
                 a cryptographic public key can be used as a verification method with
                 respect to a digital signature; in such usage, it verifies that the
                 signer could use the associated cryptographic private key.

                 Specification Reference: https://www.w3.org/TR/did-core/#verification-methods
    headers:
        "":
    securitySchemes: {}
security:
    - {}
tags:
    - name: DidService
      description: DidService is the service that provides DID operations.
    - name: IssuerService
      description: IssuerService is the service that provides ISSUER operations.
