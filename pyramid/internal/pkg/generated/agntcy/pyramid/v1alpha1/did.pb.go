// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: agntcy/pyramid/v1alpha1/did.proto

package pyramid_sdk_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DidDocument represents a set of data describing the DID subject including mechanisms such as:
//   - cryptographic public keys - used to authenticate itself and prove
//     association with the DID
//   - services - means of communicating or interacting with the DID subject or
//     associated entities via one or more service endpoints.
//     Examples include discovery services, agent services,
//     social networking services, file storage services,
//     and verifiable credential repository services.
//
// A DID Document can be retrieved by resolving a DID URI.
type DidDocument struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The DID {ID}
	// A did could be represented as `did:agntcy:{ID}`
	// The metadata below is related as claims to the {ID}
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The node that was used to publish the document
	Node *string `protobuf:"bytes,2,opt,name=node,proto3,oneof" json:"node,omitempty"`
	// Controller defines an entity that is authorized to make changes to a DID document.
	// The process of authorizing a DID controller is defined by the DID method.
	// It can be a string or a list of strings.
	Controller []string `protobuf:"bytes,3,rep,name=controller,proto3" json:"controller,omitempty"`
	// VerificationMethod is a list of cryptographic public keys, which can be used to authenticate or authorize
	// interactions with the DID subject or associated parties.
	VerificationMethod []*VerificationMethod `protobuf:"bytes,4,rep,name=verification_method,json=verificationMethod,proto3" json:"verification_method,omitempty"`
	// Service expresses ways of communicating with the DID subject or associated entities.
	// A service can be any type of service the DID subject wants to advertise.
	// spec reference: https://www.w3.org/TR/did-core/#verification-methods
	Service []*Service `protobuf:"bytes,5,rep,name=service,proto3" json:"service,omitempty"`
	// AssertionMethod is used to specify how the DID subject is expected to express claims,
	// such as for the purposes of issuing a Verifiable Credential.
	AssertionMethod []string `protobuf:"bytes,6,rep,name=assertion_method,json=assertionMethod,proto3" json:"assertion_method,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DidDocument) Reset() {
	*x = DidDocument{}
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DidDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DidDocument) ProtoMessage() {}

func (x *DidDocument) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DidDocument.ProtoReflect.Descriptor instead.
func (*DidDocument) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_did_proto_rawDescGZIP(), []int{0}
}

func (x *DidDocument) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *DidDocument) GetNode() string {
	if x != nil && x.Node != nil {
		return *x.Node
	}
	return ""
}

func (x *DidDocument) GetController() []string {
	if x != nil {
		return x.Controller
	}
	return nil
}

func (x *DidDocument) GetVerificationMethod() []*VerificationMethod {
	if x != nil {
		return x.VerificationMethod
	}
	return nil
}

func (x *DidDocument) GetService() []*Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *DidDocument) GetAssertionMethod() []string {
	if x != nil {
		return x.AssertionMethod
	}
	return nil
}

// QJWK represents a Quantum JSON Web Key (JWK) with the following fields specific to NTRU algorithms.
// This could be an extension of the JWK type.
type Qjwk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ALG represents the algorithm intended for use with the key.
	// Some example algorithms are "Falcon" family: "Falcon-512", "Falcon-1024"
	Alg *string `protobuf:"bytes,1,opt,name=alg,proto3,oneof" json:"alg,omitempty"`
	// KTY represents the key type parameter.
	// It specifies the family of quantum algorithms used with the key,
	// such as "NTRU"
	Kty *string `protobuf:"bytes,2,opt,name=kty,proto3,oneof" json:"kty,omitempty"`
	// Use represents the intended use of the key.
	// Some example values are "enc" and "sig".
	Use *string `protobuf:"bytes,3,opt,name=use,proto3,oneof" json:"use,omitempty"`
	// KID represents the key ID.
	// It is used to match a specific key.
	Kid *string `protobuf:"bytes,4,opt,name=kid,proto3,oneof" json:"kid,omitempty"`
	// h represents the public key.
	H *string `protobuf:"bytes,5,opt,name=h,proto3,oneof" json:"h,omitempty"`
	// f represents the polynomial for the private key.
	F *string `protobuf:"bytes,6,opt,name=f,proto3,oneof" json:"f,omitempty"`
	// fp represents the f inverse modulo p.
	Fp *string `protobuf:"bytes,7,opt,name=fp,proto3,oneof" json:"fp,omitempty"`
	// g represents the polynomial for the private key.
	G             *string `protobuf:"bytes,8,opt,name=g,proto3,oneof" json:"g,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Qjwk) Reset() {
	*x = Qjwk{}
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Qjwk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qjwk) ProtoMessage() {}

func (x *Qjwk) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qjwk.ProtoReflect.Descriptor instead.
func (*Qjwk) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_did_proto_rawDescGZIP(), []int{1}
}

func (x *Qjwk) GetAlg() string {
	if x != nil && x.Alg != nil {
		return *x.Alg
	}
	return ""
}

func (x *Qjwk) GetKty() string {
	if x != nil && x.Kty != nil {
		return *x.Kty
	}
	return ""
}

func (x *Qjwk) GetUse() string {
	if x != nil && x.Use != nil {
		return *x.Use
	}
	return ""
}

func (x *Qjwk) GetKid() string {
	if x != nil && x.Kid != nil {
		return *x.Kid
	}
	return ""
}

func (x *Qjwk) GetH() string {
	if x != nil && x.H != nil {
		return *x.H
	}
	return ""
}

func (x *Qjwk) GetF() string {
	if x != nil && x.F != nil {
		return *x.F
	}
	return ""
}

func (x *Qjwk) GetFp() string {
	if x != nil && x.Fp != nil {
		return *x.Fp
	}
	return ""
}

func (x *Qjwk) GetG() string {
	if x != nil && x.G != nil {
		return *x.G
	}
	return ""
}

// QJWKS represents a set of Quantum JSON Web Keys (JWKs).
type Qjwks struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Keys represents the list of Quantum JSON Web Keys.
	Keys          []*Qjwk `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Qjwks) Reset() {
	*x = Qjwks{}
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Qjwks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qjwks) ProtoMessage() {}

func (x *Qjwks) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qjwks.ProtoReflect.Descriptor instead.
func (*Qjwks) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_did_proto_rawDescGZIP(), []int{2}
}

func (x *Qjwks) GetKeys() []*Qjwk {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Service is used in DID documents to express ways of communicating with
// the DID subject or associated entities.
// A service can be any type of service the DID subject wants to advertise.
//
// Specification Reference: https://www.w3.org/TR/did-core/#services
type Service struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id is the value of the id property and MUST be a URI conforming to RFC3986.
	// A conforming producer MUST NOT produce multiple service entries with
	// the same id. A conforming consumer MUST produce an error if it detects
	// multiple service entries with the same id.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Type is an example of registered types which can be found
	// here: https://www.w3.org/TR/did-spec-registries/#service-types
	Type *string `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	// ServiceEndpoint is a network address, such as an HTTP URL, at which services
	// operate on behalf of a DID subject.
	ServiceEndpoint []string `protobuf:"bytes,3,rep,name=service_endpoint,json=serviceEndpoint,proto3" json:"service_endpoint,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_did_proto_rawDescGZIP(), []int{3}
}

func (x *Service) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Service) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Service) GetServiceEndpoint() []string {
	if x != nil {
		return x.ServiceEndpoint
	}
	return nil
}

// VerificationMethod expresses verification methods, such as cryptographic
// public keys, which can be used to authenticate or authorize interactions
// with the DID subject or associated parties. For example,
// a cryptographic public key can be used as a verification method with
// respect to a digital signature; in such usage, it verifies that the
// signer could use the associated cryptographic private key.
//
// Specification Reference: https://www.w3.org/TR/did-core/#verification-methods
type VerificationMethod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique id of the verification method.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// references exactly one verification method type. In order to maximize global
	// interoperability, the verification method type SHOULD be registered in the
	// DID Specification Registries: https://www.w3.org/TR/did-spec-registries/
	Type *string `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	// a value that conforms to the rules in DID Syntax: https://www.w3.org/TR/did-core/#did-syntax
	Controller *string `protobuf:"bytes,3,opt,name=controller,proto3,oneof" json:"controller,omitempty"`
	// specification reference: https://www.w3.org/TR/did-core/#dfn-publickeyjwk
	PublicKeyJwk  *Qjwk `protobuf:"bytes,4,opt,name=public_key_jwk,json=publicKeyJwk,proto3,oneof" json:"public_key_jwk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationMethod) Reset() {
	*x = VerificationMethod{}
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationMethod) ProtoMessage() {}

func (x *VerificationMethod) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationMethod.ProtoReflect.Descriptor instead.
func (*VerificationMethod) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_did_proto_rawDescGZIP(), []int{4}
}

func (x *VerificationMethod) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *VerificationMethod) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *VerificationMethod) GetController() string {
	if x != nil && x.Controller != nil {
		return *x.Controller
	}
	return ""
}

func (x *VerificationMethod) GetPublicKeyJwk() *Qjwk {
	if x != nil {
		return x.PublicKeyJwk
	}
	return nil
}

var File_agntcy_pyramid_v1alpha1_did_proto protoreflect.FileDescriptor

const file_agntcy_pyramid_v1alpha1_did_proto_rawDesc = "" +
	"\n" +
	"!agntcy/pyramid/v1alpha1/did.proto\x12\x17agntcy.pyramid.v1alpha1\"\xb0\x02\n" +
	"\vDidDocument\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04node\x18\x02 \x01(\tH\x01R\x04node\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"controller\x18\x03 \x03(\tR\n" +
	"controller\x12\\\n" +
	"\x13verification_method\x18\x04 \x03(\v2+.agntcy.pyramid.v1alpha1.VerificationMethodR\x12verificationMethod\x12:\n" +
	"\aservice\x18\x05 \x03(\v2 .agntcy.pyramid.v1alpha1.ServiceR\aservice\x12)\n" +
	"\x10assertion_method\x18\x06 \x03(\tR\x0fassertionMethodB\x05\n" +
	"\x03_idB\a\n" +
	"\x05_node\"\xe9\x01\n" +
	"\x04Qjwk\x12\x15\n" +
	"\x03alg\x18\x01 \x01(\tH\x00R\x03alg\x88\x01\x01\x12\x15\n" +
	"\x03kty\x18\x02 \x01(\tH\x01R\x03kty\x88\x01\x01\x12\x15\n" +
	"\x03use\x18\x03 \x01(\tH\x02R\x03use\x88\x01\x01\x12\x15\n" +
	"\x03kid\x18\x04 \x01(\tH\x03R\x03kid\x88\x01\x01\x12\x11\n" +
	"\x01h\x18\x05 \x01(\tH\x04R\x01h\x88\x01\x01\x12\x11\n" +
	"\x01f\x18\x06 \x01(\tH\x05R\x01f\x88\x01\x01\x12\x13\n" +
	"\x02fp\x18\a \x01(\tH\x06R\x02fp\x88\x01\x01\x12\x11\n" +
	"\x01g\x18\b \x01(\tH\aR\x01g\x88\x01\x01B\x06\n" +
	"\x04_algB\x06\n" +
	"\x04_ktyB\x06\n" +
	"\x04_useB\x06\n" +
	"\x04_kidB\x04\n" +
	"\x02_hB\x04\n" +
	"\x02_fB\x05\n" +
	"\x03_fpB\x04\n" +
	"\x02_g\":\n" +
	"\x05Qjwks\x121\n" +
	"\x04keys\x18\x01 \x03(\v2\x1d.agntcy.pyramid.v1alpha1.QjwkR\x04keys\"r\n" +
	"\aService\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12)\n" +
	"\x10service_endpoint\x18\x03 \x03(\tR\x0fserviceEndpointB\x05\n" +
	"\x03_idB\a\n" +
	"\x05_type\"\xe3\x01\n" +
	"\x12VerificationMethod\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12#\n" +
	"\n" +
	"controller\x18\x03 \x01(\tH\x02R\n" +
	"controller\x88\x01\x01\x12H\n" +
	"\x0epublic_key_jwk\x18\x04 \x01(\v2\x1d.agntcy.pyramid.v1alpha1.QjwkH\x03R\fpublicKeyJwk\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_typeB\r\n" +
	"\v_controllerB\x11\n" +
	"\x0f_public_key_jwkBYZWgithub.com/agntcy/pyramid/internal/pkg/generated/agntcy/pyramid/v1alpha1;pyramid_sdk_gob\x06proto3"

var (
	file_agntcy_pyramid_v1alpha1_did_proto_rawDescOnce sync.Once
	file_agntcy_pyramid_v1alpha1_did_proto_rawDescData []byte
)

func file_agntcy_pyramid_v1alpha1_did_proto_rawDescGZIP() []byte {
	file_agntcy_pyramid_v1alpha1_did_proto_rawDescOnce.Do(func() {
		file_agntcy_pyramid_v1alpha1_did_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agntcy_pyramid_v1alpha1_did_proto_rawDesc), len(file_agntcy_pyramid_v1alpha1_did_proto_rawDesc)))
	})
	return file_agntcy_pyramid_v1alpha1_did_proto_rawDescData
}

var file_agntcy_pyramid_v1alpha1_did_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_agntcy_pyramid_v1alpha1_did_proto_goTypes = []any{
	(*DidDocument)(nil),        // 0: agntcy.pyramid.v1alpha1.DidDocument
	(*Qjwk)(nil),               // 1: agntcy.pyramid.v1alpha1.Qjwk
	(*Qjwks)(nil),              // 2: agntcy.pyramid.v1alpha1.Qjwks
	(*Service)(nil),            // 3: agntcy.pyramid.v1alpha1.Service
	(*VerificationMethod)(nil), // 4: agntcy.pyramid.v1alpha1.VerificationMethod
}
var file_agntcy_pyramid_v1alpha1_did_proto_depIdxs = []int32{
	4, // 0: agntcy.pyramid.v1alpha1.DidDocument.verification_method:type_name -> agntcy.pyramid.v1alpha1.VerificationMethod
	3, // 1: agntcy.pyramid.v1alpha1.DidDocument.service:type_name -> agntcy.pyramid.v1alpha1.Service
	1, // 2: agntcy.pyramid.v1alpha1.Qjwks.keys:type_name -> agntcy.pyramid.v1alpha1.Qjwk
	1, // 3: agntcy.pyramid.v1alpha1.VerificationMethod.public_key_jwk:type_name -> agntcy.pyramid.v1alpha1.Qjwk
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_agntcy_pyramid_v1alpha1_did_proto_init() }
func file_agntcy_pyramid_v1alpha1_did_proto_init() {
	if File_agntcy_pyramid_v1alpha1_did_proto != nil {
		return
	}
	file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[0].OneofWrappers = []any{}
	file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[1].OneofWrappers = []any{}
	file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[3].OneofWrappers = []any{}
	file_agntcy_pyramid_v1alpha1_did_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agntcy_pyramid_v1alpha1_did_proto_rawDesc), len(file_agntcy_pyramid_v1alpha1_did_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agntcy_pyramid_v1alpha1_did_proto_goTypes,
		DependencyIndexes: file_agntcy_pyramid_v1alpha1_did_proto_depIdxs,
		MessageInfos:      file_agntcy_pyramid_v1alpha1_did_proto_msgTypes,
	}.Build()
	File_agntcy_pyramid_v1alpha1_did_proto = out.File
	file_agntcy_pyramid_v1alpha1_did_proto_goTypes = nil
	file_agntcy_pyramid_v1alpha1_did_proto_depIdxs = nil
}
