// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: agntcy/pyramid/v1alpha1/issuer_service.proto

package pyramid_sdk_go

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterIssuerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Issuer to register.
	Issuer        *Issuer `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterIssuerRequest) Reset() {
	*x = RegisterIssuerRequest{}
	mi := &file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterIssuerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterIssuerRequest) ProtoMessage() {}

func (x *RegisterIssuerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterIssuerRequest.ProtoReflect.Descriptor instead.
func (*RegisterIssuerRequest) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterIssuerRequest) GetIssuer() *Issuer {
	if x != nil {
		return x.Issuer
	}
	return nil
}

type RegisterIssuerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The proof of the registration.
	// This could be added as a TXT record in the DNS
	Proof         string `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterIssuerResponse) Reset() {
	*x = RegisterIssuerResponse{}
	mi := &file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterIssuerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterIssuerResponse) ProtoMessage() {}

func (x *RegisterIssuerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterIssuerResponse.ProtoReflect.Descriptor instead.
func (*RegisterIssuerResponse) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterIssuerResponse) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

type WellKnownRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The common name of the issuer
	IssuerCommonName string `protobuf:"bytes,1,opt,name=issuer_common_name,json=issuerCommonName,proto3" json:"issuer_common_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WellKnownRequest) Reset() {
	*x = WellKnownRequest{}
	mi := &file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WellKnownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WellKnownRequest) ProtoMessage() {}

func (x *WellKnownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WellKnownRequest.ProtoReflect.Descriptor instead.
func (*WellKnownRequest) Descriptor() ([]byte, []int) {
	return file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescGZIP(), []int{2}
}

func (x *WellKnownRequest) GetIssuerCommonName() string {
	if x != nil {
		return x.IssuerCommonName
	}
	return ""
}

var File_agntcy_pyramid_v1alpha1_issuer_service_proto protoreflect.FileDescriptor

var file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDesc = string([]byte{
	0x0a, 0x2c, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x24, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2f,
	0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x16, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x40, 0x0a, 0x10, 0x57, 0x65,
	0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xce, 0x04, 0x0a,
	0x0d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc3,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x12, 0x2e, 0x2e, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x50, 0x92, 0x41, 0x23, 0x12, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x20, 0x61, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x2a, 0x0e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x3a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x8d, 0x01, 0x0a, 0x06, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79,
	0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4a, 0x77, 0x6b, 0x22, 0x4d, 0x92, 0x41, 0x2a, 0x12, 0x20, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x20, 0x69,
	0x6e, 0x20, 0x4a, 0x57, 0x4b, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2a, 0x06, 0x4b, 0x65,
	0x79, 0x47, 0x65, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x2f, 0x6b, 0x65,
	0x79, 0x67, 0x65, 0x6e, 0x12, 0xd2, 0x01, 0x0a, 0x09, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f,
	0x77, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2e, 0x70, 0x79, 0x72, 0x61,
	0x6d, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x6c,
	0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x77, 0x6b, 0x22, 0x7c, 0x92, 0x41, 0x3e,
	0x12, 0x31, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x6c,
	0x6c, 0x2d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x44, 0x49, 0x44, 0x20, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x61, 0x20, 0x77, 0x65, 0x62, 0x20,
	0x44, 0x49, 0x44, 0x2a, 0x09, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x7b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x2d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2f, 0x64, 0x69, 0x64, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x1a, 0x12, 0x92, 0x41, 0x0f, 0x0a, 0x0d,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x59, 0x5a,
	0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x6e, 0x74,
	0x63, 0x79, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69,
	0x64, 0x5f, 0x73, 0x64, 0x6b, 0x5f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescOnce sync.Once
	file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescData []byte
)

func file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescGZIP() []byte {
	file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescOnce.Do(func() {
		file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDesc), len(file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDesc)))
	})
	return file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDescData
}

var file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_agntcy_pyramid_v1alpha1_issuer_service_proto_goTypes = []any{
	(*RegisterIssuerRequest)(nil),  // 0: agntcy.pyramid.v1alpha1.RegisterIssuerRequest
	(*RegisterIssuerResponse)(nil), // 1: agntcy.pyramid.v1alpha1.RegisterIssuerResponse
	(*WellKnownRequest)(nil),       // 2: agntcy.pyramid.v1alpha1.WellKnownRequest
	(*Issuer)(nil),                 // 3: agntcy.pyramid.v1alpha1.Issuer
	(*emptypb.Empty)(nil),          // 4: google.protobuf.Empty
	(*Jwk)(nil),                    // 5: agntcy.pyramid.v1alpha1.Jwk
}
var file_agntcy_pyramid_v1alpha1_issuer_service_proto_depIdxs = []int32{
	3, // 0: agntcy.pyramid.v1alpha1.RegisterIssuerRequest.issuer:type_name -> agntcy.pyramid.v1alpha1.Issuer
	0, // 1: agntcy.pyramid.v1alpha1.IssuerService.RegisterIssuer:input_type -> agntcy.pyramid.v1alpha1.RegisterIssuerRequest
	4, // 2: agntcy.pyramid.v1alpha1.IssuerService.KeyGen:input_type -> google.protobuf.Empty
	2, // 3: agntcy.pyramid.v1alpha1.IssuerService.WellKnown:input_type -> agntcy.pyramid.v1alpha1.WellKnownRequest
	1, // 4: agntcy.pyramid.v1alpha1.IssuerService.RegisterIssuer:output_type -> agntcy.pyramid.v1alpha1.RegisterIssuerResponse
	5, // 5: agntcy.pyramid.v1alpha1.IssuerService.KeyGen:output_type -> agntcy.pyramid.v1alpha1.Jwk
	5, // 6: agntcy.pyramid.v1alpha1.IssuerService.WellKnown:output_type -> agntcy.pyramid.v1alpha1.Jwk
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_agntcy_pyramid_v1alpha1_issuer_service_proto_init() }
func file_agntcy_pyramid_v1alpha1_issuer_service_proto_init() {
	if File_agntcy_pyramid_v1alpha1_issuer_service_proto != nil {
		return
	}
	file_agntcy_pyramid_v1alpha1_issuer_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDesc), len(file_agntcy_pyramid_v1alpha1_issuer_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agntcy_pyramid_v1alpha1_issuer_service_proto_goTypes,
		DependencyIndexes: file_agntcy_pyramid_v1alpha1_issuer_service_proto_depIdxs,
		MessageInfos:      file_agntcy_pyramid_v1alpha1_issuer_service_proto_msgTypes,
	}.Build()
	File_agntcy_pyramid_v1alpha1_issuer_service_proto = out.File
	file_agntcy_pyramid_v1alpha1_issuer_service_proto_goTypes = nil
	file_agntcy_pyramid_v1alpha1_issuer_service_proto_depIdxs = nil
}
