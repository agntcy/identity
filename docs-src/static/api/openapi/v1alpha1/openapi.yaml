# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: PyramID
    description: PyramID
    contact:
        name: Agntcy Team
        url: https://github.com/agntcy/pyramid
        email: pyramid@agntcy.org
    version: v1alpha1
servers:
    - url: http://0.0.0.0:4000
      description: Local environment
paths:
    /v1alpha1/credentials/publish:
        post:
            tags:
                - CredentialsService
            description: Publish
            operationId: CredentialsService_Publish
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AgentPassport'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/id/generate:
        post:
            tags:
                - IdService
            description: Generate an Id
            operationId: IdService_Generate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AgentContent'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AgentPassport'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/id/resolve:
        post:
            tags:
                - IdService
            description: Resolve an Id
            operationId: IdService_Resolve
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResolveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AgentPassport'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/issuer/keygen:
        get:
            tags:
                - IssuerService
            description: Generate a keypair in QJWK format
            operationId: IssuerService_KeyGen
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QJWK'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/issuer/register:
        post:
            tags:
                - IssuerService
            description: Register
            operationId: IssuerService_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Issuer'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1alpha1/issuer/{commonName}/.well-known/id.json:
        get:
            tags:
                - IssuerService
            description: WellKnown endpoint
            operationId: IssuerService_WellKnown
            parameters:
                - name: commonName
                  in: path
                  description: The common name of the issuer
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QJWKS'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AgentContent:
            type: object
            properties:
                value:
                    type: string
                    description: The OASF in json format
            description: |-
                The Agent content representation following OASF schema
                 Specs: https://schema.oasf.agntcy.org/schema/objects/agent
        AgentPassport:
            type: object
            properties:
                envelopeType:
                    enum:
                        - AGENT_PASSPORT_ENVELOPE_TYPE_UNSPECIFIED
                        - AGENT_PASSPORT_ENVELOPE_TYPE_JOSE
                    type: string
                    description: EnvelopeType specifies the type of the envelope used to store the passport.
                    format: enum
                value:
                    type: string
                    description: Value is the value of the passport.
            description: AgentPassport represents an identity passport for an agent.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Issuer:
            type: object
            properties:
                organization:
                    type: string
                    description: The organization of the issuer
                subOrganization:
                    type: string
                    description: The sub organization of the issuer
                commonName:
                    type: string
                    description: |-
                        The common name of the issuer
                         Could be a FQDN or a FQDA
                publicKey:
                    allOf:
                        - $ref: '#/components/schemas/QJWK'
                    description: |-
                        The keys of the issuer in QJWK format
                         The public key is used to verify the signature of the different claims
                privateKey:
                    allOf:
                        - $ref: '#/components/schemas/QJWK'
                    description: The private key of the issuer in JWK format
            description: A PyramID Issuer
        QJWK:
            type: object
            properties:
                alg:
                    type: string
                    description: |-
                        ALG represents the algorithm intended for use with the key.
                         Some example algorithms are "Falcon" family: "Falcon-512", "Falcon-1024"
                kty:
                    type: string
                    description: |-
                        KTY represents the key type parameter.
                         It specifies the family of quantum algorithms used with the key,
                         such as "NTRU"
                use:
                    type: string
                    description: |-
                        Use represents the intended use of the key.
                         Some example values are "enc" and "sig".
                kid:
                    type: string
                    description: |-
                        KID represents the key ID.
                         It is used to match a specific key.
                h:
                    type: string
                    description: h represents the public key.
                f:
                    type: string
                    description: f represents the private key.
                fp:
                    type: string
                    description: fp represents the private key.
                g:
                    type: string
                    description: g represents the public key.
            description: |-
                QJWK represents a Quantum JSON Web Key (JWK) with the following fields specific to NTRU algorithms.
                 This could be an extension of the JWK type.
        QJWKS:
            type: object
            properties:
                keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/QJWK'
                    description: Keys represents the list of Quantum JSON Web Keys.
            description: QJWKS represents a set of Quantum JSON Web Keys (JWKs).
        RegisterResponse:
            type: object
            properties:
                uri:
                    type: string
                    description: A uri indicating an action to take to complete the registration.
        ResolveRequest:
            type: object
            properties:
                id:
                    type: string
                    description: The id of the agent
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    headers:
        "":
    securitySchemes: {}
security:
    - {}
tags:
    - name: CredentialsService
      description: CredentialsService is the service that provides VC operations.
    - name: IdService
      description: IdService is the service that provides ID operations.
    - name: IssuerService
      description: IssuerService is the service that provides ISSUER operations.
