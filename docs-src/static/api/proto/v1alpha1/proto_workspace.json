{
  "files": [
    {
      "name": "agntcy/pyramid/v1alpha1/id.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "AgentPassportEnvelopeType",
          "longName": "AgentPassportEnvelopeType",
          "fullName": "agntcy.pyramid.v1alpha1.AgentPassportEnvelopeType",
          "description": "The Envelope Type of the Agent Passport.\nMultiple envelope types can be supported: JOSE, COSE etc.",
          "values": [
            {
              "name": "AGENT_PASSPORT_ENVELOPE_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Unspecified Envelope Type."
            },
            {
              "name": "AGENT_PASSPORT_ENVELOPE_TYPE_JOSE",
              "number": "1",
              "description": "JOSE Envelope Type."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AgentClaims",
          "longName": "AgentClaims",
          "fullName": "agntcy.pyramid.v1alpha1.AgentClaims",
          "description": "The Agent definition following OASF schema\nSpecs: https://schema.oasf.agntcy.org/schema/objects/agent",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "The OASF in json format",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AgentPassport",
          "longName": "AgentPassport",
          "fullName": "agntcy.pyramid.v1alpha1.AgentPassport",
          "description": "AgentPassport represents an identity passport for an agent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "envelope_type",
              "description": "EnvelopeType specifies the type of the envelope used to store the passport.",
              "label": "optional",
              "type": "AgentPassportEnvelopeType",
              "longType": "AgentPassportEnvelopeType",
              "fullType": "agntcy.pyramid.v1alpha1.AgentPassportEnvelopeType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_envelope_type",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Value is the value of the passport.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "JWK",
          "longName": "JWK",
          "fullName": "agntcy.pyramid.v1alpha1.JWK",
          "description": "JWK represents a JSON Web Key as per RFC7517 (https://tools.ietf.org/html/rfc7517)\nNote that this is a subset of the spec. There are a handful of properties that the\nspec allows for that are not represented here at the moment. This is because we\nonly need a subset of the spec for our purposes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "alg",
              "description": "ALG represents the algorithm intended for use with the key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_alg",
              "defaultValue": ""
            },
            {
              "name": "kty",
              "description": "KTY represents the key type parameter.\nIt specifies the family of cryptographic algorithms used with the key,\nsuch as \"RSA\" or \"EC\" for elliptic curve keys.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kty",
              "defaultValue": ""
            },
            {
              "name": "crv",
              "description": "CRV represents the curve parameter for elliptic curve keys.\nIt specifies the cryptographic curve used with the key, such as \"P-256\" or \"P-384\".",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_crv",
              "defaultValue": ""
            },
            {
              "name": "d",
              "description": "D represents the private key parameter.\nThis field is used to store the private key material for asymmetric keys.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_d",
              "defaultValue": ""
            },
            {
              "name": "x",
              "description": "X represents the x-coordinate for elliptic curve keys.\nThis field is part of the public key material for elliptic curve cryptography (ECC).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_x",
              "defaultValue": ""
            },
            {
              "name": "y",
              "description": "Y represents the y-coordinate for elliptic curve keys.\nThis field is part of the public key material for elliptic curve cryptography (ECC)",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_y",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/pyramid/v1alpha1/credentials_service.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "PublishRequest",
          "longName": "PublishRequest",
          "fullName": "agntcy.pyramid.v1alpha1.PublishRequest",
          "description": "PublishRequest is the request to publish VCs on identity nodes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "passport",
              "description": "Publish an agent passport as a VC",
              "label": "",
              "type": "AgentPassport",
              "longType": "AgentPassport",
              "fullType": "agntcy.pyramid.v1alpha1.AgentPassport",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "CredentialsService",
          "longName": "CredentialsService",
          "fullName": "agntcy.pyramid.v1alpha1.CredentialsService",
          "description": "CredentialsService is the service that provides VC operations.",
          "methods": [
            {
              "name": "Publish",
              "description": "Publish",
              "requestType": "PublishRequest",
              "requestLongType": "PublishRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.PublishRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/credentials/publish",
                      "body": "passport"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/pyramid/v1alpha1/id_service.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenerateRequest",
          "longName": "GenerateRequest",
          "fullName": "agntcy.pyramid.v1alpha1.GenerateRequest",
          "description": "Generate an Id based on the agent",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claims",
              "description": "The full OASF representation of an agent including the digest",
              "label": "",
              "type": "AgentClaims",
              "longType": "AgentClaims",
              "fullType": "agntcy.pyramid.v1alpha1.AgentClaims",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolveRequest",
          "longName": "ResolveRequest",
          "fullName": "agntcy.pyramid.v1alpha1.ResolveRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claims",
              "description": "The full OASF representation of an agent including the digest",
              "label": "",
              "type": "AgentClaims",
              "longType": "AgentClaims",
              "fullType": "agntcy.pyramid.v1alpha1.AgentClaims",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "IdService",
          "longName": "IdService",
          "fullName": "agntcy.pyramid.v1alpha1.IdService",
          "description": "IdService is the service that provides ID operations.",
          "methods": [
            {
              "name": "Generate",
              "description": "Generate an Id",
              "requestType": "GenerateRequest",
              "requestLongType": "GenerateRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.GenerateRequest",
              "requestStreaming": false,
              "responseType": "AgentPassport",
              "responseLongType": "AgentPassport",
              "responseFullType": "agntcy.pyramid.v1alpha1.AgentPassport",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/id/generate",
                      "body": "claims"
                    }
                  ]
                }
              }
            },
            {
              "name": "Resolve",
              "description": "Resolve an Id",
              "requestType": "ResolveRequest",
              "requestLongType": "ResolveRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.ResolveRequest",
              "requestStreaming": false,
              "responseType": "AgentPassport",
              "responseLongType": "AgentPassport",
              "responseFullType": "agntcy.pyramid.v1alpha1.AgentPassport",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/id/resolve",
                      "body": "claims"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/pyramid/v1alpha1/issuer.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Issuer",
          "longName": "Issuer",
          "fullName": "agntcy.pyramid.v1alpha1.Issuer",
          "description": "A PyramID Issuer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "organization",
              "description": "The organization of the issuer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_organization",
              "defaultValue": ""
            },
            {
              "name": "sub_organization",
              "description": "The sub organization of the issuer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sub_organization",
              "defaultValue": ""
            },
            {
              "name": "common_name",
              "description": "The common name of the issuer\nCould be a FQDN or a FQDA",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_common_name",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "The keys of the issuer in JWK format\nThe public key is used to verify the signature of the different claims",
              "label": "optional",
              "type": "JWK",
              "longType": "JWK",
              "fullType": "agntcy.pyramid.v1alpha1.JWK",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "private_key",
              "description": "The private key of the issuer in JWK format",
              "label": "optional",
              "type": "JWK",
              "longType": "JWK",
              "fullType": "agntcy.pyramid.v1alpha1.JWK",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_private_key",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/pyramid/v1alpha1/issuer_service.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "RegisterRequest",
          "longName": "RegisterRequest",
          "fullName": "agntcy.pyramid.v1alpha1.RegisterRequest",
          "description": "RegisterRequest is the request to register an issuer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "issuer",
              "description": "The Issuer to register.",
              "label": "",
              "type": "Issuer",
              "longType": "Issuer",
              "fullType": "agntcy.pyramid.v1alpha1.Issuer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegisterResponse",
          "longName": "RegisterResponse",
          "fullName": "agntcy.pyramid.v1alpha1.RegisterResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "uri",
              "description": "A uri indicating an action to take to complete the registration.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WellKnownRequest",
          "longName": "WellKnownRequest",
          "fullName": "agntcy.pyramid.v1alpha1.WellKnownRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "common_name",
              "description": "The common name of the issuer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "IssuerService",
          "longName": "IssuerService",
          "fullName": "agntcy.pyramid.v1alpha1.IssuerService",
          "description": "IssuerService is the service that provides ISSUER operations.",
          "methods": [
            {
              "name": "KeyGen",
              "description": "Generate a keypair in JWK format",
              "requestType": "Empty",
              "requestLongType": ".google.protobuf.Empty",
              "requestFullType": "google.protobuf.Empty",
              "requestStreaming": false,
              "responseType": "JWK",
              "responseLongType": "JWK",
              "responseFullType": "agntcy.pyramid.v1alpha1.JWK",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/issuer/keygen"
                    }
                  ]
                }
              }
            },
            {
              "name": "Register",
              "description": "Register",
              "requestType": "RegisterRequest",
              "requestLongType": "RegisterRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.RegisterRequest",
              "requestStreaming": false,
              "responseType": "RegisterResponse",
              "responseLongType": "RegisterResponse",
              "responseFullType": "agntcy.pyramid.v1alpha1.RegisterResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/issuer/register",
                      "body": "issuer"
                    }
                  ]
                }
              }
            },
            {
              "name": "WellKnown",
              "description": "WellKnown endpoint",
              "requestType": "WellKnownRequest",
              "requestLongType": "WellKnownRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.WellKnownRequest",
              "requestStreaming": false,
              "responseType": "JWK",
              "responseLongType": "JWK",
              "responseFullType": "agntcy.pyramid.v1alpha1.JWK",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/issuer/{common_name}/.well-known/id.json"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/pyramid/v1alpha1/openapi.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}