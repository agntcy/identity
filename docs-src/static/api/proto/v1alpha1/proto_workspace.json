{
  "files": [
    {
      "name": "agntcy/pyramid/v1alpha1/did.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "DidSubjectType",
          "longName": "DidSubjectType",
          "fullName": "agntcy.pyramid.v1alpha1.DidSubjectType",
          "description": "DidSubjectType defines the types of subjects that a Decentralized Identifier (DID) can represent.\nIt categorizes the role or nature of the subject within a decentralized identity framework.",
          "values": [
            {
              "name": "DID_SUBJECT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Unspecified Function Type."
            },
            {
              "name": "DID_SUBJECT_TYPE_AGENT",
              "number": "1",
              "description": "The DID subject is an agent"
            },
            {
              "name": "DID_SUBJECT_TYPE_AGENT_LOCATOR",
              "number": "2",
              "description": "The DID subject is an agent locator"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Did",
          "longName": "Did",
          "fullName": "agntcy.pyramid.v1alpha1.Did",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "DidDocument",
          "longName": "DidDocument",
          "fullName": "agntcy.pyramid.v1alpha1.DidDocument",
          "description": "A PyramID Decentralized Identifier Document represents a set of data describing the DID subject including mechanisms such as:\n  - cryptographic public keys - used to authenticate itself and prove\n    association with the DID\n  - services - means of communicating or interacting with the DID subject or\n    associated entities via one or more service endpoints.\n    Examples include discovery services, agent services,\n    social networking services, file storage services,\n    and verifiable credential repository services.\n\nA DID Document can be retrieved by resolving a DID URI.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The DID {ID}\nA did could be represented as `did:agntcy:{ID}`\nThe metadata below is related as claims to the {ID}",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "The node that was used to publish the document",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node",
              "defaultValue": ""
            },
            {
              "name": "controller",
              "description": "Controller defines an entity that is authorized to make changes to a DID document.\nThe process of authorizing a DID controller is defined by the DID method.\nIt can be a string or a list of strings.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verification_method",
              "description": "VerificationMethod is a list of cryptographic public keys, which can be used to authenticate or authorize\ninteractions with the DID subject or associated parties.",
              "label": "repeated",
              "type": "VerificationMethod",
              "longType": "VerificationMethod",
              "fullType": "agntcy.pyramid.v1alpha1.VerificationMethod",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service",
              "description": "Service expresses ways of communicating with the DID subject or associated entities.\nA service can be any type of service the DID subject wants to advertise.\nspec reference: https://www.w3.org/TR/did-core/#verification-methods",
              "label": "repeated",
              "type": "Service",
              "longType": "Service",
              "fullType": "agntcy.pyramid.v1alpha1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "assertion_method",
              "description": "AssertionMethod is used to specify how the DID subject is expected to express claims,\nsuch as for the purposes of issuing a Verifiable Credential.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DidSubject",
          "longName": "DidSubject",
          "fullName": "agntcy.pyramid.v1alpha1.DidSubject",
          "description": "DidSubject represents a subject within a decentralized identity framework.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A local unique id of the subject.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type specifies the type of the subject, as defined by the DidSubjectType enum.\nThis indicates the role or nature of the subject in the decentralized identity system,\nsuch as whether it is an agent or an agent locator.",
              "label": "optional",
              "type": "DidSubjectType",
              "longType": "DidSubjectType",
              "fullType": "agntcy.pyramid.v1alpha1.DidSubjectType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "JWK",
          "longName": "JWK",
          "fullName": "agntcy.pyramid.v1alpha1.JWK",
          "description": "JWK represents a JSON Web Key as per RFC7517 (https://tools.ietf.org/html/rfc7517)\nNote that this is a subset of the spec. There are a handful of properties that the\nspec allows for that are not represented here at the moment. This is because we\nonly need a subset of the spec for our purposes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "alg",
              "description": "ALG represents the algorithm intended for use with the key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_alg",
              "defaultValue": ""
            },
            {
              "name": "kty",
              "description": "KTY represents the key type parameter.\nIt specifies the family of cryptographic algorithms used with the key,\nsuch as \"RSA\" or \"EC\" for elliptic curve keys.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kty",
              "defaultValue": ""
            },
            {
              "name": "crv",
              "description": "CRV represents the curve parameter for elliptic curve keys.\nIt specifies the cryptographic curve used with the key, such as \"P-256\" or \"P-384\".",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_crv",
              "defaultValue": ""
            },
            {
              "name": "d",
              "description": "D represents the private key parameter.\nThis field is used to store the private key material for asymmetric keys.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_d",
              "defaultValue": ""
            },
            {
              "name": "x",
              "description": "X represents the x-coordinate for elliptic curve keys.\nThis field is part of the public key material for elliptic curve cryptography (ECC).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_x",
              "defaultValue": ""
            },
            {
              "name": "y",
              "description": "Y represents the y-coordinate for elliptic curve keys.\nThis field is part of the public key material for elliptic curve cryptography (ECC)",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_y",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Service",
          "longName": "Service",
          "fullName": "agntcy.pyramid.v1alpha1.Service",
          "description": "Service is used in DID documents to express ways of communicating with\nthe DID subject or associated entities.\nA service can be any type of service the DID subject wants to advertise.\n\nSpecification Reference: https://www.w3.org/TR/did-core/#services",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Id is the value of the id property and MUST be a URI conforming to RFC3986.\nA conforming producer MUST NOT produce multiple service entries with\nthe same id. A conforming consumer MUST produce an error if it detects\nmultiple service entries with the same id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type is an example of registered types which can be found\nhere: https://www.w3.org/TR/did-spec-registries/#service-types",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            },
            {
              "name": "service_endpoint",
              "description": "ServiceEndpoint is a network address, such as an HTTP URL, at which services\noperate on behalf of a DID subject.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerificationMethod",
          "longName": "VerificationMethod",
          "fullName": "agntcy.pyramid.v1alpha1.VerificationMethod",
          "description": "VerificationMethod expresses verification methods, such as cryptographic\npublic keys, which can be used to authenticate or authorize interactions\nwith the DID subject or associated parties. For example,\na cryptographic public key can be used as a verification method with\nrespect to a digital signature; in such usage, it verifies that the\nsigner could use the associated cryptographic private key.\n\nSpecification Reference: https://www.w3.org/TR/did-core/#verification-methods",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A unique id of the verification method.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "references exactly one verification method type. In order to maximize global\ninteroperability, the verification method type SHOULD be registered in the\nDID Specification Registries: https://www.w3.org/TR/did-spec-registries/",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            },
            {
              "name": "controller",
              "description": "a value that conforms to the rules in DID Syntax: https://www.w3.org/TR/did-core/#did-syntax",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_controller",
              "defaultValue": ""
            },
            {
              "name": "public_key_jwk",
              "description": "specification reference: https://www.w3.org/TR/did-core/#dfn-publickeyjwk",
              "label": "optional",
              "type": "JWK",
              "longType": "JWK",
              "fullType": "agntcy.pyramid.v1alpha1.JWK",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key_jwk",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/pyramid/v1alpha1/issuer.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Issuer",
          "longName": "Issuer",
          "fullName": "agntcy.pyramid.v1alpha1.Issuer",
          "description": "A PyramID Issuer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "common_name",
              "description": "The common name of the issuer\nExample: isuser.com",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_common_name",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "The keys of the issuer of the DID in JWK format\nThe public key is used to verify the signature of the DID",
              "label": "optional",
              "type": "JWK",
              "longType": "JWK",
              "fullType": "agntcy.pyramid.v1alpha1.JWK",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "private_key",
              "description": "The private key of the issuer of the DID in JWK format",
              "label": "optional",
              "type": "JWK",
              "longType": "JWK",
              "fullType": "agntcy.pyramid.v1alpha1.JWK",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_private_key",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/pyramid/v1alpha1/did_service.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenerateDidRequest",
          "longName": "GenerateDidRequest",
          "fullName": "agntcy.pyramid.v1alpha1.GenerateDidRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "issuer",
              "description": "Issuer of the DID",
              "label": "",
              "type": "Issuer",
              "longType": "Issuer",
              "fullType": "agntcy.pyramid.v1alpha1.Issuer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject",
              "description": "The DID subject",
              "label": "",
              "type": "DidSubject",
              "longType": "DidSubject",
              "fullType": "agntcy.pyramid.v1alpha1.DidSubject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDidsRequest",
          "longName": "ListDidsRequest",
          "fullName": "agntcy.pyramid.v1alpha1.ListDidsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "page",
              "description": "The current page of the pagination",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "The page size of the pagination",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_size",
              "defaultValue": ""
            },
            {
              "name": "query",
              "description": "The search query",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_query",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDidsResponse",
          "longName": "ListDidsResponse",
          "fullName": "agntcy.pyramid.v1alpha1.ListDidsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "documents",
              "description": "A list of Did documents.",
              "label": "repeated",
              "type": "DidDocument",
              "longType": "DidDocument",
              "fullType": "agntcy.pyramid.v1alpha1.DidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination response.",
              "label": "optional",
              "type": "PagedResponse",
              "longType": "agntcy.pyramid.shared.v1alpha1.PagedResponse",
              "fullType": "agntcy.pyramid.shared.v1alpha1.PagedResponse",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublishDidRequest",
          "longName": "PublishDidRequest",
          "fullName": "agntcy.pyramid.v1alpha1.PublishDidRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "document",
              "description": "",
              "label": "",
              "type": "DidDocument",
              "longType": "DidDocument",
              "fullType": "agntcy.pyramid.v1alpha1.DidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolveDidRequest",
          "longName": "ResolveDidRequest",
          "fullName": "agntcy.pyramid.v1alpha1.ResolveDidRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The DID URI for a particular DID subject,\nexpressed using the id property in the DID document.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "DidService",
          "longName": "DidService",
          "fullName": "agntcy.pyramid.v1alpha1.DidService",
          "description": "DidService is the service that provides DID operations.",
          "methods": [
            {
              "name": "GenerateDid",
              "description": "Generate a Did",
              "requestType": "GenerateDidRequest",
              "requestLongType": "GenerateDidRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.GenerateDidRequest",
              "requestStreaming": false,
              "responseType": "DidDocument",
              "responseLongType": "DidDocument",
              "responseFullType": "agntcy.pyramid.v1alpha1.DidDocument",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/dids",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ResolveDid",
              "description": "Resolve a Did",
              "requestType": "ResolveDidRequest",
              "requestLongType": "ResolveDidRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.ResolveDidRequest",
              "requestStreaming": false,
              "responseType": "DidDocument",
              "responseLongType": "DidDocument",
              "responseFullType": "agntcy.pyramid.v1alpha1.DidDocument",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/dids/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListDids",
              "description": "List Dids.",
              "requestType": "ListDidsRequest",
              "requestLongType": "ListDidsRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.ListDidsRequest",
              "requestStreaming": false,
              "responseType": "ListDidsResponse",
              "responseLongType": "ListDidsResponse",
              "responseFullType": "agntcy.pyramid.v1alpha1.ListDidsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/dids"
                    }
                  ]
                }
              }
            },
            {
              "name": "PublishDid",
              "description": "Publish a Did",
              "requestType": "PublishDidRequest",
              "requestLongType": "PublishDidRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.PublishDidRequest",
              "requestStreaming": false,
              "responseType": "DidDocument",
              "responseLongType": "DidDocument",
              "responseFullType": "agntcy.pyramid.v1alpha1.DidDocument",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/dids/publish",
                      "body": "document"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/pyramid/v1alpha1/issuer_service.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "RegisterIssuerRequest",
          "longName": "RegisterIssuerRequest",
          "fullName": "agntcy.pyramid.v1alpha1.RegisterIssuerRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "issuer",
              "description": "The Issuer to register.",
              "label": "",
              "type": "Issuer",
              "longType": "Issuer",
              "fullType": "agntcy.pyramid.v1alpha1.Issuer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegisterIssuerResponse",
          "longName": "RegisterIssuerResponse",
          "fullName": "agntcy.pyramid.v1alpha1.RegisterIssuerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proof",
              "description": "The proof of the registration.\nThis could be added as a TXT record in the DNS",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WellKnownRequest",
          "longName": "WellKnownRequest",
          "fullName": "agntcy.pyramid.v1alpha1.WellKnownRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "issuer_common_name",
              "description": "The common name of the issuer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "IssuerService",
          "longName": "IssuerService",
          "fullName": "agntcy.pyramid.v1alpha1.IssuerService",
          "description": "IssuerService is the service that provides ISSUER operations.",
          "methods": [
            {
              "name": "RegisterIssuer",
              "description": "Register a Issuer",
              "requestType": "RegisterIssuerRequest",
              "requestLongType": "RegisterIssuerRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.RegisterIssuerRequest",
              "requestStreaming": false,
              "responseType": "RegisterIssuerResponse",
              "responseLongType": "RegisterIssuerResponse",
              "responseFullType": "agntcy.pyramid.v1alpha1.RegisterIssuerResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/issuers/register",
                      "body": "issuer"
                    }
                  ]
                }
              }
            },
            {
              "name": "KeyGen",
              "description": "Generate a keypair in JWK format",
              "requestType": "Empty",
              "requestLongType": ".google.protobuf.Empty",
              "requestFullType": "google.protobuf.Empty",
              "requestStreaming": false,
              "responseType": "JWK",
              "responseLongType": "JWK",
              "responseFullType": "agntcy.pyramid.v1alpha1.JWK",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/issuers/keygen"
                    }
                  ]
                }
              }
            },
            {
              "name": "WellKnown",
              "description": "Resolve a web DID document to the well-known DID document",
              "requestType": "WellKnownRequest",
              "requestLongType": "WellKnownRequest",
              "requestFullType": "agntcy.pyramid.v1alpha1.WellKnownRequest",
              "requestStreaming": false,
              "responseType": "JWK",
              "responseLongType": "JWK",
              "responseFullType": "agntcy.pyramid.v1alpha1.JWK",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/{issuer_common_name}/.well-known/did.json"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/pyramid/v1alpha1/openapi.proto",
      "description": "",
      "package": "agntcy.pyramid.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}