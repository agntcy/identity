// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: agntcy/identity/core/v1alpha1/id.proto

package identity_core_sdk_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IdDocument represents a set of data describing the ID including mechanisms such as:
//   - cryptographic public keys - used to authenticate itself and prove
//     association with the ID
//   - node - the node that was used to publish the document
//
// An ID Document can be retrieved by resolving an ID.
type IdDocument struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID
	// The metadata below is related as claims to the ID
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The node that was used to publish the document
	Node *string `protobuf:"bytes,2,opt,name=node,proto3,oneof" json:"node,omitempty"`
	// VerificationMethod is a list of cryptographic public keys, which can be used
	// to authenticate or authorize interactions with the VCs associated with the ID.
	VerificationMethod []*VerificationMethod `protobuf:"bytes,3,rep,name=verification_method,json=verificationMethod,proto3" json:"verification_method,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *IdDocument) Reset() {
	*x = IdDocument{}
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdDocument) ProtoMessage() {}

func (x *IdDocument) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdDocument.ProtoReflect.Descriptor instead.
func (*IdDocument) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_id_proto_rawDescGZIP(), []int{0}
}

func (x *IdDocument) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *IdDocument) GetNode() string {
	if x != nil && x.Node != nil {
		return *x.Node
	}
	return ""
}

func (x *IdDocument) GetVerificationMethod() []*VerificationMethod {
	if x != nil {
		return x.VerificationMethod
	}
	return nil
}

// JWK represents:
// - a JSON Web Key (JWK) with the respective fields specific to RSA algorithms.
// - a Quantum JSON Web Key (QJWK) with the respective fields specific to AKP algorithms.
type Jwk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ALG represents the algorithm intended for use with the key.
	// Example algorithms for Post-Quantum ML-DSA family:
	// "ML-DSA-44", "ML-DSA-65", "ML-DSA-87".
	// Some example algorithms are "RS256", "RS384", "RS512" for RSA algorithms.
	Alg *string `protobuf:"bytes,1,opt,name=alg,proto3,oneof" json:"alg,omitempty"`
	// KTY represents the key type parameter.
	// It specifies the family of quantum algorithms used with the key,
	// such as "AKP" for post quantum algorithms
	// or "RSA" for non quantum algorithms.
	Kty *string `protobuf:"bytes,2,opt,name=kty,proto3,oneof" json:"kty,omitempty"`
	// Use represents the intended use of the key.
	// Some example values are "enc" and "sig".
	Use *string `protobuf:"bytes,3,opt,name=use,proto3,oneof" json:"use,omitempty"`
	// KID represents the key ID.
	// It is used to match a specific key.
	Kid *string `protobuf:"bytes,4,opt,name=kid,proto3,oneof" json:"kid,omitempty"`
	// The public key for the AKP kty.
	Pub *string `protobuf:"bytes,5,opt,name=pub,proto3,oneof" json:"pub,omitempty"`
	// The private key for the AKP kty.
	Priv *string `protobuf:"bytes,6,opt,name=priv,proto3,oneof" json:"priv,omitempty"`
	// Seed used to derive keys for ML-DSA alg.
	Seed *string `protobuf:"bytes,7,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
	// The exponent for the RSA public key.
	E *string `protobuf:"bytes,8,opt,name=e,proto3,oneof" json:"e,omitempty"`
	// The modulus for the RSA public key.
	N *string `protobuf:"bytes,9,opt,name=n,proto3,oneof" json:"n,omitempty"`
	// The private exponent for the RSA kty.
	D *string `protobuf:"bytes,10,opt,name=d,proto3,oneof" json:"d,omitempty"`
	// The first prime factor for the RSA private key.
	P *string `protobuf:"bytes,11,opt,name=p,proto3,oneof" json:"p,omitempty"`
	// The second prime factor for the RSA private key.
	Q *string `protobuf:"bytes,12,opt,name=q,proto3,oneof" json:"q,omitempty"`
	// The first factor CRT exponent for the RSA private key.
	Dp *string `protobuf:"bytes,13,opt,name=dp,proto3,oneof" json:"dp,omitempty"`
	// The second factor CRT exponent for the RSA private key.
	Dq *string `protobuf:"bytes,14,opt,name=dq,proto3,oneof" json:"dq,omitempty"`
	// The first CRT coefficient for the RSA private key.
	Qi            *string `protobuf:"bytes,15,opt,name=qi,proto3,oneof" json:"qi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jwk) Reset() {
	*x = Jwk{}
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwk) ProtoMessage() {}

func (x *Jwk) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwk.ProtoReflect.Descriptor instead.
func (*Jwk) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_id_proto_rawDescGZIP(), []int{1}
}

func (x *Jwk) GetAlg() string {
	if x != nil && x.Alg != nil {
		return *x.Alg
	}
	return ""
}

func (x *Jwk) GetKty() string {
	if x != nil && x.Kty != nil {
		return *x.Kty
	}
	return ""
}

func (x *Jwk) GetUse() string {
	if x != nil && x.Use != nil {
		return *x.Use
	}
	return ""
}

func (x *Jwk) GetKid() string {
	if x != nil && x.Kid != nil {
		return *x.Kid
	}
	return ""
}

func (x *Jwk) GetPub() string {
	if x != nil && x.Pub != nil {
		return *x.Pub
	}
	return ""
}

func (x *Jwk) GetPriv() string {
	if x != nil && x.Priv != nil {
		return *x.Priv
	}
	return ""
}

func (x *Jwk) GetSeed() string {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return ""
}

func (x *Jwk) GetE() string {
	if x != nil && x.E != nil {
		return *x.E
	}
	return ""
}

func (x *Jwk) GetN() string {
	if x != nil && x.N != nil {
		return *x.N
	}
	return ""
}

func (x *Jwk) GetD() string {
	if x != nil && x.D != nil {
		return *x.D
	}
	return ""
}

func (x *Jwk) GetP() string {
	if x != nil && x.P != nil {
		return *x.P
	}
	return ""
}

func (x *Jwk) GetQ() string {
	if x != nil && x.Q != nil {
		return *x.Q
	}
	return ""
}

func (x *Jwk) GetDp() string {
	if x != nil && x.Dp != nil {
		return *x.Dp
	}
	return ""
}

func (x *Jwk) GetDq() string {
	if x != nil && x.Dq != nil {
		return *x.Dq
	}
	return ""
}

func (x *Jwk) GetQi() string {
	if x != nil && x.Qi != nil {
		return *x.Qi
	}
	return ""
}

// JWKS represents a set of JSON Web Keys (JWKs).
type Jwks struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Keys represents the list of JSON Web Keys.
	Keys          []*Jwk `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jwks) Reset() {
	*x = Jwks{}
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwks) ProtoMessage() {}

func (x *Jwks) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwks.ProtoReflect.Descriptor instead.
func (*Jwks) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_id_proto_rawDescGZIP(), []int{2}
}

func (x *Jwks) GetKeys() []*Jwk {
	if x != nil {
		return x.Keys
	}
	return nil
}

// VerificationMethod expresses verification methods, such as cryptographic
// public keys, which can be used to authenticate or authorize interactions
// with the VCs associated with the ID. It is a part of the ID Document.
type VerificationMethod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique id of the verification method.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The public key used for the verification method.
	PublicKeyJwk  *Jwk `protobuf:"bytes,2,opt,name=public_key_jwk,json=publicKeyJwk,proto3,oneof" json:"public_key_jwk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationMethod) Reset() {
	*x = VerificationMethod{}
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationMethod) ProtoMessage() {}

func (x *VerificationMethod) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationMethod.ProtoReflect.Descriptor instead.
func (*VerificationMethod) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_id_proto_rawDescGZIP(), []int{3}
}

func (x *VerificationMethod) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *VerificationMethod) GetPublicKeyJwk() *Jwk {
	if x != nil {
		return x.PublicKeyJwk
	}
	return nil
}

var File_agntcy_identity_core_v1alpha1_id_proto protoreflect.FileDescriptor

const file_agntcy_identity_core_v1alpha1_id_proto_rawDesc = "" +
	"\n" +
	"&agntcy/identity/core/v1alpha1/id.proto\x12\x1dagntcy.identity.core.v1alpha1\"\xae\x01\n" +
	"\n" +
	"IdDocument\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04node\x18\x02 \x01(\tH\x01R\x04node\x88\x01\x01\x12b\n" +
	"\x13verification_method\x18\x03 \x03(\v21.agntcy.identity.core.v1alpha1.VerificationMethodR\x12verificationMethodB\x05\n" +
	"\x03_idB\a\n" +
	"\x05_node\"\xb5\x03\n" +
	"\x03Jwk\x12\x15\n" +
	"\x03alg\x18\x01 \x01(\tH\x00R\x03alg\x88\x01\x01\x12\x15\n" +
	"\x03kty\x18\x02 \x01(\tH\x01R\x03kty\x88\x01\x01\x12\x15\n" +
	"\x03use\x18\x03 \x01(\tH\x02R\x03use\x88\x01\x01\x12\x15\n" +
	"\x03kid\x18\x04 \x01(\tH\x03R\x03kid\x88\x01\x01\x12\x15\n" +
	"\x03pub\x18\x05 \x01(\tH\x04R\x03pub\x88\x01\x01\x12\x17\n" +
	"\x04priv\x18\x06 \x01(\tH\x05R\x04priv\x88\x01\x01\x12\x17\n" +
	"\x04seed\x18\a \x01(\tH\x06R\x04seed\x88\x01\x01\x12\x11\n" +
	"\x01e\x18\b \x01(\tH\aR\x01e\x88\x01\x01\x12\x11\n" +
	"\x01n\x18\t \x01(\tH\bR\x01n\x88\x01\x01\x12\x11\n" +
	"\x01d\x18\n" +
	" \x01(\tH\tR\x01d\x88\x01\x01\x12\x11\n" +
	"\x01p\x18\v \x01(\tH\n" +
	"R\x01p\x88\x01\x01\x12\x11\n" +
	"\x01q\x18\f \x01(\tH\vR\x01q\x88\x01\x01\x12\x13\n" +
	"\x02dp\x18\r \x01(\tH\fR\x02dp\x88\x01\x01\x12\x13\n" +
	"\x02dq\x18\x0e \x01(\tH\rR\x02dq\x88\x01\x01\x12\x13\n" +
	"\x02qi\x18\x0f \x01(\tH\x0eR\x02qi\x88\x01\x01B\x06\n" +
	"\x04_algB\x06\n" +
	"\x04_ktyB\x06\n" +
	"\x04_useB\x06\n" +
	"\x04_kidB\x06\n" +
	"\x04_pubB\a\n" +
	"\x05_privB\a\n" +
	"\x05_seedB\x04\n" +
	"\x02_eB\x04\n" +
	"\x02_nB\x04\n" +
	"\x02_dB\x04\n" +
	"\x02_pB\x04\n" +
	"\x02_qB\x05\n" +
	"\x03_dpB\x05\n" +
	"\x03_dqB\x05\n" +
	"\x03_qi\">\n" +
	"\x04Jwks\x126\n" +
	"\x04keys\x18\x01 \x03(\v2\".agntcy.identity.core.v1alpha1.JwkR\x04keys\"\x92\x01\n" +
	"\x12VerificationMethod\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12M\n" +
	"\x0epublic_key_jwk\x18\x02 \x01(\v2\".agntcy.identity.core.v1alpha1.JwkH\x01R\fpublicKeyJwk\x88\x01\x01B\x05\n" +
	"\x03_idB\x11\n" +
	"\x0f_public_key_jwkBfZdgithub.com/agntcy/identity/internal/pkg/generated/agntcy/identity/core/v1alpha1;identity_core_sdk_gob\x06proto3"

var (
	file_agntcy_identity_core_v1alpha1_id_proto_rawDescOnce sync.Once
	file_agntcy_identity_core_v1alpha1_id_proto_rawDescData []byte
)

func file_agntcy_identity_core_v1alpha1_id_proto_rawDescGZIP() []byte {
	file_agntcy_identity_core_v1alpha1_id_proto_rawDescOnce.Do(func() {
		file_agntcy_identity_core_v1alpha1_id_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agntcy_identity_core_v1alpha1_id_proto_rawDesc), len(file_agntcy_identity_core_v1alpha1_id_proto_rawDesc)))
	})
	return file_agntcy_identity_core_v1alpha1_id_proto_rawDescData
}

var file_agntcy_identity_core_v1alpha1_id_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_agntcy_identity_core_v1alpha1_id_proto_goTypes = []any{
	(*IdDocument)(nil),         // 0: agntcy.identity.core.v1alpha1.IdDocument
	(*Jwk)(nil),                // 1: agntcy.identity.core.v1alpha1.Jwk
	(*Jwks)(nil),               // 2: agntcy.identity.core.v1alpha1.Jwks
	(*VerificationMethod)(nil), // 3: agntcy.identity.core.v1alpha1.VerificationMethod
}
var file_agntcy_identity_core_v1alpha1_id_proto_depIdxs = []int32{
	3, // 0: agntcy.identity.core.v1alpha1.IdDocument.verification_method:type_name -> agntcy.identity.core.v1alpha1.VerificationMethod
	1, // 1: agntcy.identity.core.v1alpha1.Jwks.keys:type_name -> agntcy.identity.core.v1alpha1.Jwk
	1, // 2: agntcy.identity.core.v1alpha1.VerificationMethod.public_key_jwk:type_name -> agntcy.identity.core.v1alpha1.Jwk
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_agntcy_identity_core_v1alpha1_id_proto_init() }
func file_agntcy_identity_core_v1alpha1_id_proto_init() {
	if File_agntcy_identity_core_v1alpha1_id_proto != nil {
		return
	}
	file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[0].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[1].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_id_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agntcy_identity_core_v1alpha1_id_proto_rawDesc), len(file_agntcy_identity_core_v1alpha1_id_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agntcy_identity_core_v1alpha1_id_proto_goTypes,
		DependencyIndexes: file_agntcy_identity_core_v1alpha1_id_proto_depIdxs,
		MessageInfos:      file_agntcy_identity_core_v1alpha1_id_proto_msgTypes,
	}.Build()
	File_agntcy_identity_core_v1alpha1_id_proto = out.File
	file_agntcy_identity_core_v1alpha1_id_proto_goTypes = nil
	file_agntcy_identity_core_v1alpha1_id_proto_depIdxs = nil
}
