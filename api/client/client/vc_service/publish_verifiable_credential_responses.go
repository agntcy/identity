// Code generated by go-swagger; DO NOT EDIT.

package vc_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/agntcy/identity/api/client/models"
)

// PublishVerifiableCredentialReader is a Reader for the PublishVerifiableCredential structure.
type PublishVerifiableCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublishVerifiableCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewPublishVerifiableCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPublishVerifiableCredentialDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPublishVerifiableCredentialOK creates a PublishVerifiableCredentialOK with default headers values
func NewPublishVerifiableCredentialOK() *PublishVerifiableCredentialOK {
	return &PublishVerifiableCredentialOK{}
}

/*
PublishVerifiableCredentialOK describes a response with status code 200, with default header values.

A successful response.
*/
type PublishVerifiableCredentialOK struct {
	Payload any
}

// IsSuccess returns true when this publish verifiable credential o k response has a 2xx status code
func (o *PublishVerifiableCredentialOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this publish verifiable credential o k response has a 3xx status code
func (o *PublishVerifiableCredentialOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish verifiable credential o k response has a 4xx status code
func (o *PublishVerifiableCredentialOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this publish verifiable credential o k response has a 5xx status code
func (o *PublishVerifiableCredentialOK) IsServerError() bool {
	return false
}

// IsCode returns true when this publish verifiable credential o k response a status code equal to that given
func (o *PublishVerifiableCredentialOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the publish verifiable credential o k response
func (o *PublishVerifiableCredentialOK) Code() int {
	return 200
}

func (o *PublishVerifiableCredentialOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1alpha1/vc/publish][%d] publishVerifiableCredentialOK %s", 200, payload)
}

func (o *PublishVerifiableCredentialOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1alpha1/vc/publish][%d] publishVerifiableCredentialOK %s", 200, payload)
}

func (o *PublishVerifiableCredentialOK) GetPayload() any {
	return o.Payload
}

func (o *PublishVerifiableCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPublishVerifiableCredentialDefault creates a PublishVerifiableCredentialDefault with default headers values
func NewPublishVerifiableCredentialDefault(code int) *PublishVerifiableCredentialDefault {
	return &PublishVerifiableCredentialDefault{
		_statusCode: code,
	}
}

/*
PublishVerifiableCredentialDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PublishVerifiableCredentialDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this publish verifiable credential default response has a 2xx status code
func (o *PublishVerifiableCredentialDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this publish verifiable credential default response has a 3xx status code
func (o *PublishVerifiableCredentialDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this publish verifiable credential default response has a 4xx status code
func (o *PublishVerifiableCredentialDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this publish verifiable credential default response has a 5xx status code
func (o *PublishVerifiableCredentialDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this publish verifiable credential default response a status code equal to that given
func (o *PublishVerifiableCredentialDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the publish verifiable credential default response
func (o *PublishVerifiableCredentialDefault) Code() int {
	return o._statusCode
}

func (o *PublishVerifiableCredentialDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1alpha1/vc/publish][%d] PublishVerifiableCredential default %s", o._statusCode, payload)
}

func (o *PublishVerifiableCredentialDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1alpha1/vc/publish][%d] PublishVerifiableCredential default %s", o._statusCode, payload)
}

func (o *PublishVerifiableCredentialDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *PublishVerifiableCredentialDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
